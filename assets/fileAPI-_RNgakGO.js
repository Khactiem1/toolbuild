var c=Object.defineProperty;var m=(a,t,e)=>t in a?c(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var r=(a,t,e)=>m(a,typeof t!="symbol"?t+"":t,e);import{I as d,Z as h,a0 as u,a1 as n}from"./index-DmUMvrSQ.js";class f extends d{constructor(){super(...arguments);r(this,"apiName","file");r(this,"controllerName","FileManagement")}initAPI(){this.apiName&&(this.baseUrl=window._apis[this.apiName]+"api/v1/"+this.controllerName)}getUrlViewFile(){return window._apis.file+"storage"}getFileViewUrl(e){return window._apis.file+`storage${e}`}async uploadFile(e,i,o=!1){const l=new FormData;l.append("file",e);const p=h.getUser(),s=await u.post(this.getAPIUrl()+`/upload?path=${i}&isUploadKeepNameFile=${o}`,l,{headers:{"Content-Type":"multipart/form-data",Authorization:`Bearer ${p.access_token}`}});return s!=null&&s.data?s.data:{}}async deleteFile(e){let i={url:this.getAPIUrl()+`/?path=${e}`};return await n.deleteAsync(i)}async getAllFileInPath(e){let i={url:this.getAPIUrl()+`/?path=${e}`};return await n.getAsync(i)}}const A=new f;export{A as f};
